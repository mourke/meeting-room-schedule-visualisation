{"version":3,"sources":["icons/Active indicator.svg","SidebarSplitViewController.tsx","MeetingsOverviewView.tsx","LoginView.tsx","CalendarView.tsx","icons/Calendar.svg","icons/Settings.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SidebarSplitViewController","props","state","index","this","pages","className","src","activeIndicator","alt","setState","map","value","activityIndicatorForIndex","onClick","changeTab","style","opacity","icon","Container","fluid","Row","sidebar","Col","currentPage","mainView","xs","detailView","React","Component","MeetingsOverviewView","CalendarView","App","meetings","mainPage","calendar","settingsPage","settings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAAe,MAA0B,6C,OCmBpBA,E,kDAEjB,WAAYC,GAAyC,IAAD,8BAChD,cAAMA,IAEDC,MAAQ,CAACC,MAAO,GAH2B,E,+CAMpD,WACI,OAAOC,KAAKH,MAAMI,MAAMD,KAAKF,MAAMC,S,uCAGvC,SAA0BA,GACtB,OAAIC,KAAKF,MAAMC,OAASA,EACb,qBAAKG,UAAU,2BAA2BC,IAAKC,EAAiBC,IAAK,gBAE5E,I,uBAIR,SAAUN,GACNC,KAAKM,SAAS,CAACP,MAAOA,M,qBAG1B,WAAW,IAAD,OACN,OACI,sBAAKG,UAAU,UAAf,UACI,wBAGA,qBAAKA,UAAU,wBAAf,SAEQF,KAAKH,MAAMI,MAAMM,KAAI,SAACC,EAAOT,GACzB,OACI,sBAAKG,UAAW,eAAhB,UACK,EAAKO,0BAA0BV,GAChC,qBAAKW,QAAS,kBAAM,EAAKC,UAAUZ,IAAQa,MAAO,CAACC,QAAS,EAAKf,MAAMC,OAASA,EAAQ,OAAS,OAAQG,UAAU,mBAAmBC,IAAKK,EAAMM,oB,oBAUjL,WACI,OACI,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACKjB,KAAKkB,UACN,cAACC,EAAA,EAAD,UAAMnB,KAAKoB,cAAcC,WACzB,cAACF,EAAA,EAAD,CAAKjB,UAAU,0BAA0BoB,GAAI,EAA7C,SAAiDtB,KAAKoB,cAAcG,sB,GApDhCC,IAAMC,WCRzCC,G,MCRkBF,IAAMC,U,kKDUzC,WACI,OACI,8BACI,gD,GALkCD,IAAMC,YEAnCE,G,kKAEjB,WACI,OAAO,oD,GAH2BH,IAAMC,YCXjC,MAA0B,qCCA1B,MAA0B,qCC2B1BG,MAjBf,WAEI,IAAIC,EAAkB,GAChBR,EAAW,cAAC,EAAD,CAAcQ,SAAUA,IACnCN,EAAa,cAAC,EAAD,CAAsBM,SAAUA,IAC7CC,EAAW,CAACT,SAASA,EAAUE,WAAWA,EAAYT,KAAKiB,GAC3DC,EAAe,CAACX,SAASA,EAAUE,WAAYA,EAAYT,KAAKmB,GACtE,OAAO,cAAC,EAAD,CAA6BhC,MAAO,CAAC6B,EAAUE,MCH3CE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca589eb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Active indicator.a5368acb.svg\";","import './SidebarSplitViewController.css';\nimport React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport activeIndicator from './icons/Active indicator.svg'\n\ntype SidebarSplitViewControllerState = {\n    index: number\n}\n\ntype SidebarSplitViewControllerChildren = {\n    mainView: React.ComponentElement<any, any>\n    detailView: React.ComponentElement<any, any>\n    icon: string\n}\n\ntype SidebarSplitViewControllerProps = {\n    pages: SidebarSplitViewControllerChildren[]\n}\n\nexport default class SidebarSplitViewController extends React.Component<SidebarSplitViewControllerProps, SidebarSplitViewControllerState> {\n\n    constructor(props: SidebarSplitViewControllerProps) {\n        super(props);\n\n        this.state = {index: 0};\n    }\n\n    currentPage() {\n        return this.props.pages[this.state.index]\n    }\n\n    activityIndicatorForIndex(index: number) {\n        if (this.state.index == index) {\n            return <img className=\"toolbar-active-indicator\" src={activeIndicator} alt={\"Active\"}/>;\n        } else {\n            return undefined;\n        }\n    }\n\n    changeTab(index: number) {\n        this.setState({index: index});\n    }\n\n    sidebar() {\n        return (\n            <div className=\"toolbar\">\n                <div>\n\n                </div>\n                <div className=\"toolbar-items-section\">\n                    {\n                        this.props.pages.map((value, index) => {\n                            return (\n                                <div className={\"toolbar-item\"}>\n                                    {this.activityIndicatorForIndex(index)}\n                                    <img onClick={() => this.changeTab(index)} style={{opacity: this.state.index == index ? \"100%\" : \"40%\"}} className=\"toolbar-item-img\" src={value.icon}/>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    {this.sidebar()}\n                    <Col>{this.currentPage().mainView}</Col>\n                    <Col className=\"splitview-detail-column\" xs={4}>{this.currentPage().detailView}</Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import './MeetingsOverviewView.css';\nimport React from 'react';\n\ntype MeetingsOverviewViewState = {\n    loading: boolean\n}\n\ntype MeetingsOverviewViewProps = {\n    meetings: object\n}\n\nexport default class MeetingsOverviewView extends React.Component<MeetingsOverviewViewProps, MeetingsOverviewViewState> {\n\n    render() {\n        return (\n            <div>\n                <h5>Meetings</h5>\n            </div>\n        );\n    }\n}","import './LoginView.css';\nimport React from 'react';\n\nexport default class LoginView extends React.Component {\n\n    render() {\n        return undefined;\n    }\n}\n","import './CalendarView.css';\nimport React from 'react';\n\ntype CalendarViewState = {\n    loading: boolean\n}\n\ntype CalendarViewProps = {\n    meetings: object\n}\n\nexport default class CalendarView extends React.Component<CalendarViewProps, CalendarViewState> {\n\n    render() {\n        return <div>Calendar view</div>;\n    }\n}","export default __webpack_public_path__ + \"static/media/Calendar.bb613596.svg\";","export default __webpack_public_path__ + \"static/media/Settings.2cbb9c21.svg\";","import React from 'react';\nimport SidebarSplitViewController from './SidebarSplitViewController'\nimport LoginView from \"./LoginView\";\nimport MeetingsOverviewView from \"./MeetingsOverviewView\";\nimport CalendarView from \"./CalendarView\";\nimport calendar from './icons/Calendar.svg'\nimport settings from './icons/Settings.svg'\n\nexport const APP_COLOR = \"#6a53e4\";\n\nfunction App() {\n  if (isSignedIn()) {\n    let meetings: any[] = []; // TODO: fetch from API\n    const mainView = <CalendarView meetings={meetings}/>;\n    const detailView = <MeetingsOverviewView meetings={meetings}/>;\n    const mainPage = {mainView:mainView, detailView:detailView, icon:calendar};\n    const settingsPage = {mainView:mainView, detailView: detailView, icon:settings}\n    return <SidebarSplitViewController  pages={[mainPage, settingsPage]}/>;\n  } else {\n    return <LoginView />;\n  }\n}\n\nfunction isSignedIn() {\n  return true; // TODO: Implement this to read from browser storage\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}