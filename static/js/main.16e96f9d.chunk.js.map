{"version":3,"sources":["models/Event.ts","images/icons/Active indicator.svg","views/SidebarSplitViewController.tsx","views/LoginView.tsx","images/icons/Book.svg","images/icons/Camera.svg","images/icons/Group.svg","images/icons/Present.svg","views/MeetingsOverviewView.tsx","images/icons/Right Chevron.svg","views/CalendarView.tsx","views/SettingsView.tsx","images/icons/Calendar.svg","images/icons/Settings.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EventType","SidebarSplitViewController","props","state","index","this","pages","className","src","activeIndicator","alt","setState","map","value","activityIndicatorForIndex","onClick","changeTab","style","opacity","icon","detail","undefined","currentPage","detailView","Col","xs","Container","fluid","height","Row","sidebar","padding","display","flexDirection","mainView","React","Component","MeetingsOverviewView","meetings","loading","error","empty","testImageURL","URL","dateString","Date","toLocaleDateString","weekday","month","day","name","overview","time","duration","category","conference","attendees","image","email","birthday","call","catchup","Object","keys","length","emptyView","message","title","meeting","start","end","getTime","options","hour12","hour","minute","toLocaleTimeString","Group","Present","Camera","Book","entries","Fragment","backgroundColor","meetingStringFromMeeting","imageForMeetingCategory","filter","cssFilterForMeetingCategory","flatMap","person","toString","body","loadingView","errorView","listView","CalendarView","DAYS_IN_A_WEEK","HOURS_IN_A_DAY","now","nextWeek","bind","previousWeek","date","startOfWeek","getDate","getDay","setDate","firstDay","firstDayOfWeek","lastDay","toLocaleString","currentDate","marginTop","paddingLeft","borderBottom","type","RightChevron","weekString","Array","dayName","isCurrentDay","setHours","noGutters","flex","marginLeft","column","row","SettingsView","App","mainPage","dateRange","startDate","endDate","calendar","settingsPage","settings","Fab","color","aria-label","Add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16e96f9d.chunk.js","sourcesContent":["import {Person} from './Person'\n\nexport enum EventType {\n    call = `#0085e3`,\n    birthday = `#ff623b`,\n    catchup = `#00a89d`,\n    conference = `#b891ff`\n}\n\nexport type Event = {\n    name: string\n    overview: string\n    category: EventType\n    time: Date\n    duration: number // in minutes\n    attendees: Person[]\n}\n\n","export default __webpack_public_path__ + \"static/media/Active indicator.a5368acb.svg\";","import './SidebarSplitViewController.css'\nimport React from 'react'\nimport {Col, Container, Row} from 'react-bootstrap'\nimport activeIndicator from '../images/icons/Active indicator.svg'\n\ntype SidebarSplitViewControllerState = {\n    index: number\n}\n\ntype SidebarSplitViewControllerChildren = {\n    mainView: React.ComponentElement<any, any>\n    detailView?: React.ComponentElement<any, any>\n    icon: string\n}\n\ntype SidebarSplitViewControllerProps = {\n    pages: SidebarSplitViewControllerChildren[]\n}\n\nexport default class SidebarSplitViewController extends React.Component<SidebarSplitViewControllerProps, SidebarSplitViewControllerState> {\n\n    constructor(props: SidebarSplitViewControllerProps) {\n        super(props)\n\n        this.state = {index: 0}\n    }\n\n    currentPage() {\n        return this.props.pages[this.state.index]\n    }\n\n    activityIndicatorForIndex(index: number) {\n        if (this.state.index === index) {\n            return <img className=\"toolbar-active-indicator\" src={activeIndicator} alt={\"Active\"}/>\n        } else {\n            return undefined\n        }\n    }\n\n    changeTab(index: number) {\n        this.setState({index})\n    }\n\n    sidebar() {\n        return (\n            <div className=\"toolbar\">\n                <div>\n\n                </div>\n                <div className=\"toolbar-items-section\">\n                    {\n                        this.props.pages.map((value, index) => {\n                            return (\n                                <div className={\"toolbar-item\"}>\n                                    {this.activityIndicatorForIndex(index)}\n                                    <img onClick={() => this.changeTab(index)} style={{opacity: this.state.index === index ? \"100%\" : \"40%\"}} className=\"toolbar-item-img\" src={value.icon} alt={`Toolbar item ${index}`}/>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        let detail: JSX.Element | undefined\n\n        if (this.currentPage().detailView !== undefined) {\n            detail = <Col className=\"splitview-detail-column\" xs={3}>{this.currentPage().detailView}</Col>\n        } else {\n            detail = undefined\n        }\n\n        return (\n            <Container fluid style={{height: \"100vh\"}}>\n                <Row style={{height: \"100%\"}}>\n                    {this.sidebar()}\n                    <Col style={{padding: 0, height: \"100%\", display: \"flex\", flexDirection: \"column\"}}>\n                        {this.currentPage().mainView}\n                    </Col>\n                    {detail}\n                </Row>\n            </Container>\n        )\n    }\n}","import './LoginView.css'\nimport React from 'react'\n\ntype LoginViewState = {\n    login: boolean\n    error?: Error\n    roomSelection: boolean\n}\n\ntype LoginViewProps = {\n}\n\nexport default class LoginView extends React.Component<LoginViewProps, LoginViewState> {\n\n    constructor(props: LoginViewProps) {\n        super(props)\n\n        this.loginButtonClicked = this.loginButtonClicked.bind(this)\n    }\n\n    loginButtonClicked() {\n        console.log(\"Button clicked\") // TODO: Call API\n    }\n\n    render() {\n        return (\n            <div className={\"login-background\"}>\n                <div className={\"login-popover\"}>\n                    <div style={{width: \"76%\", margin: \"0 auto\", textAlign: \"center\"}}>\n                        <h3 className={\"login-header-text\"}>Sign in to Microsoft Account</h3>\n                        <p className={\"login-information-text\"}>Connect your Microsoft account to sync, edit and add calendar data</p>\n                        <button onClick={this.loginButtonClicked} className={\"btn login-button\"}>Sign in with Outlook</button>\n                    </div>\n                    <span className={\"login-copyright-text\"}>Copyright © TCD SWENG 2021 Group 3</span>\n                </div>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/Book.500a8c14.svg\";","export default __webpack_public_path__ + \"static/media/Camera.9f633ba0.svg\";","export default __webpack_public_path__ + \"static/media/Group.ab6a2326.svg\";","export default __webpack_public_path__ + \"static/media/Present.ed74593a.svg\";","import './MeetingsOverviewView.css'\nimport React from 'react'\n//import API from '../API'\nimport {Event as Meeting, EventType} from '../models/Event'\nimport Book from '../images/icons/Book.svg'\nimport Camera from '../images/icons/Camera.svg'\nimport Group from '../images/icons/Group.svg'\nimport Present from '../images/icons/Present.svg'\n\ntype MeetingsOverviewViewState = {\n    loading: boolean\n    error?: Error\n    empty: boolean\n}\n\ntype MeetingsOverviewViewProps = {\n    dateRange: {startDate: Date, endDate: Date}\n}\n\nexport default class MeetingsOverviewView extends React.Component<MeetingsOverviewViewProps, MeetingsOverviewViewState> {\n\n    // A date string key and an array of event values\n    private meetings: Record<string, Meeting[]>\n\n    constructor(props: MeetingsOverviewViewProps) {\n        super(props)\n\n        this.meetings = {}\n        this.state = {loading: false, error: undefined, empty: true}\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n\n        const testImageURL = new URL(\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\")\n\n        const date = new Date()\n        const dateString = date.toLocaleDateString(\"default\", {weekday: \"long\", month: \"long\", day: \"numeric\"})\n        // Call API\n        this.meetings = {\n            [dateString]: [{\n                name: \"Meeting with John\",\n                overview: \"Sample meeting overview.\",\n                time: new Date(),\n                duration: 60,\n                category: EventType.conference,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            },\n            {\n                name: \"Meeting with John\",\n                overview: \"Sample meeting overview.\",\n                time: new Date(),\n                duration: 60,\n                category: EventType.birthday,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            },\n            {\n                name: \"Meeting with John\",\n                overview: \"Sample meeting overview.\",\n                time: new Date(),\n                duration: 60,\n                category: EventType.call,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            },\n            {\n                name: \"Meeting with John\",\n                overview: \"Sample meeting overview.\",\n                time: new Date(),\n                duration: 60,\n                category: EventType.catchup,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            },\n            {\n                name: \"Meeting with John\",\n                overview: \"Sample meeting overview.\",\n                time: new Date(),\n                duration: 60,\n                category: EventType.conference,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            },\n            {\n                name: \"Meeting with John\",\n                overview: \"Sample meeting overview.\",\n                time: new Date(),\n                duration: 60,\n                category: EventType.conference,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            }]\n        }\n\n        this.setState({loading: false, empty: Object.keys(this.meetings).length === 0, error: undefined})\n    }\n\n    errorView(error: Error) {\n        return this.emptyView(error.name, error.message)\n    }\n\n    emptyView(title = \"Looks like there's no meetings\", message = \"Have a day off!\") {\n        return (\n            <div style={{height: \"100%\"}}>\n                <div className={\"meetings-overview-empty-view\"}>\n                    <h4 className={\"meetings-overview-empty-view-header\"}>{title}</h4>\n                    <span className={\"meetings-overview-empty-view-message\"}>{message}</span>\n                </div>\n            </div>\n        )\n    }\n\n    loadingView() {\n        return (\n            <div className={\"meetings-overview-loading-view\"}>\n                <div className={\"meetings-overview-loading-view-spinner\"}>\n                </div>\n            </div>\n        )\n    }\n\n    meetingStringFromMeeting(meeting: Meeting) {\n        const start = meeting.time\n        const minutesInMilliseconds = 60000\n        const end = new Date(start.getTime() + meeting.duration*minutesInMilliseconds)\n        const options: Intl.DateTimeFormatOptions = {hour12: false, hour: \"2-digit\", minute: \"2-digit\"}\n\n        return `${start.toLocaleTimeString(\"default\", options)} - ${end.toLocaleTimeString(\"default\", options)}`\n    }\n\n    imageForMeetingCategory(category: EventType) {\n        switch (category) {\n            case EventType.conference:\n                return Group\n            case EventType.birthday:\n                return Present\n            case EventType.call:\n                return Camera\n            case EventType.catchup:\n                return Book\n        }\n    }\n\n    cssFilterForMeetingCategory(category: EventType) {\n        // colours generated from https://codepen.io/sosuke/pen/Pjoqqp using code from https://stackoverflow.com/a/43960991/604861\n        // we could alternatively just put the function here but the code would have to be torn apart to return exactly what we want\n        switch (category) {\n            case EventType.conference:\n                return \"invert(62%) sepia(8%) saturate(7333%) hue-rotate(215deg) brightness(104%) contrast(101%)\"\n            case EventType.birthday:\n                return \"invert(49%) sepia(78%) saturate(2895%) hue-rotate(338deg) brightness(106%) contrast(101%)\"\n            case EventType.call:\n                return \"invert(61%) sepia(84%) saturate(6031%) hue-rotate(184deg) brightness(93%) contrast(102%)\"\n            case EventType.catchup:\n                return \"invert(47%) sepia(86%) saturate(2495%) hue-rotate(145deg) brightness(93%) contrast(101%)\"\n        }\n    }\n\n    listView() {\n        return (\n            <ul className={\"meetings-overview-meetings\"}>\n                {Object.entries(this.meetings).map(([dateString, meetings]) =>\n                    (\n                        <React.Fragment>\n                            <h6 className={\"meetings-overview-header-text\"}>{dateString}</h6>\n                            {meetings.map(meeting =>\n                                (\n                                    <li>\n                                        <div className={\"meetings-overview-meeting-color-tab\"}\n                                             style={{backgroundColor: meeting.category}}/>\n                                        <div className={\"meetings-overview-meeting-text\"}>\n                                            <h6>{meeting.name}</h6>\n                                            <span>{this.meetingStringFromMeeting(meeting)}</span>\n                                            <div className={\"meetings-overview-meeting-icon\"}\n                                                 style={{backgroundColor: `${meeting.category}59`}}> {/* 59 is alpha 0.35*/}\n                                                <img src={this.imageForMeetingCategory(meeting.category)}\n                                                     style={{filter: this.cssFilterForMeetingCategory(meeting.category)}}\n                                                     alt={\"\"}/>\n                                            </div>\n                                        </div>\n                                        <ul className={\"meetings-overview-meeting-attendees\"}>\n                                            {meeting.attendees.flatMap((person, index) => {\n                                                if (person.image === undefined || index > 5) { // only have a max of 6 images\n                                                    return []\n                                                }\n                                                return [(\n                                                    <li>\n                                                        <img src={person.image.toString()}\n                                                             alt={`${person.name}'s avatar`}/>\n                                                    </li>\n                                                )]\n                                            })}\n                                        </ul>\n                                    </li>\n                                ))}\n                        </React.Fragment>\n                    ))}\n            </ul>\n        )\n    }\n\n    render() {\n        let body: JSX.Element\n\n        if (this.state.loading) {\n            body = this.loadingView()\n        } else if (this.state.empty) {\n            body = this.emptyView()\n        } else if (this.state.error != null) {\n            body = this.errorView(this.state.error)\n        } else {\n            body = this.listView()\n        }\n\n        return (\n            <div className={\"meetings-overview-scroll-container scroll-container-hidden-bars\"}>\n                <h5 className={\"meetings-overview-heading\"}>Meetings</h5>\n                {body}\n            </div>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/Right Chevron.4e4a1046.svg\";","import './CalendarView.css'\nimport React from 'react'\nimport RightChevron from '../images/icons/Right Chevron.svg'\nimport {Col, Container, Row} from \"react-bootstrap\"\n\ntype CalendarViewState = {\n    loading: boolean\n    now: Date\n}\n\ntype CalendarViewProps = {\n}\n\nexport default class CalendarView extends React.Component<CalendarViewProps, CalendarViewState> {\n\n    private readonly DAYS_IN_A_WEEK = 7\n    private readonly HOURS_IN_A_DAY = 24\n\n    constructor(props: CalendarViewProps) {\n        super(props)\n\n        this.state = {loading: false, now: new Date()}\n        this.nextWeek = this.nextWeek.bind(this)\n        this.previousWeek = this.previousWeek.bind(this)\n    }\n\n    firstDayOfWeek(date: Date) {\n        const startOfWeek = date.getDate() - date.getDay() // First day is the day of the month - the day of the week\n        return new Date(date.setDate(startOfWeek))\n    }\n\n    weekString(date: Date) {\n        const firstDay = this.firstDayOfWeek(date)\n        const lastDay = new Date(date.setDate(firstDay.getDate() + this.DAYS_IN_A_WEEK - 1))\n        const month = lastDay.toLocaleString('default', { month: 'long' }) // use the month of the last date in case we have changed month\n\n        return `${firstDay.getDate()} - ${lastDay.getDate()} ${month}`\n    }\n\n    previousWeek() {\n        const currentDate = this.state.now\n        currentDate.setDate(currentDate.getDate() - this.DAYS_IN_A_WEEK)\n        this.setState({now: currentDate})\n    }\n\n    nextWeek() {\n        const currentDate = this.state.now\n        currentDate.setDate(currentDate.getDate() + this.DAYS_IN_A_WEEK)\n        this.setState({now: currentDate})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{marginTop: \"30px\", paddingLeft: \"25px\", borderBottom: \"1px solid lightgray\"}}>\n                    <div className={\"calendar-view-stepper-control\"}>\n                        <button onClick={this.previousWeek} type={\"button\"} className={\"btn btn-light\"}>\n                            <img className={\"calendar-view-stepper-control-left-image\"} src={RightChevron} alt={\"Go back a week\"}/>\n                        </button>\n                        <div className={\"calendar-view-stepper-control-separator\"}/>\n                        <button onClick={this.nextWeek} type={\"button\"} className={\"btn btn-light\"}>\n                            <img src={RightChevron} alt={\"Go forward a week\"}/>\n                        </button>\n                    </div>\n                    <h5 className={\"calendar-view-current-week\"}>{this.weekString(this.state.now)}</h5>\n                </div>\n                <Container className={\"calendar-view\"}>\n                    <Row className={\"calendar-view-header\"}>\n                        {\n                            [...Array(this.DAYS_IN_A_WEEK)].map((value, index) => {\n                                const firstDay = this.firstDayOfWeek(this.state.now)\n                                const day = new Date(firstDay.setDate(firstDay.getDate() + index))\n                                const dayName = day.toLocaleString('default', { weekday: 'short' })\n                                const isCurrentDay = day.getDate() === this.state.now.getDate()\n\n                                return (\n                                    <Col className={`calendar-view-header-weekday ${isCurrentDay ? \"calendar-view-header-current-weekday\" : \"\" }`}>\n                                        <h6>{dayName}</h6>\n                                        <h5>{day.getDate()}</h5>\n                                    </Col>\n                                )\n                            })\n                        }\n                    </Row>\n                    <Row className={\"calendar-view-calendar scroll-container-hidden-bars\"}>\n                        <div className={\"calendar-view-calendar-times\"}>\n                            {\n                                [...Array(this.HOURS_IN_A_DAY)].map((value, index) => {\n                                    const time = new Date(this.state.now.setHours(index))\n                                    return (\n                                        <div className={\"calendar-view-calendar-time\"}>\n                                            <span>{time.toLocaleTimeString(\"default\", {hour12: true, hour: \"numeric\"})}</span>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <Row noGutters={true} style={{flex: 1, marginLeft: \"-10px\"}}>\n                            <div className={\"calendar-view-horizontal-separators\"}>\n                                {\n                                    [...Array(this.HOURS_IN_A_DAY)].map((value, index) => {\n                                        return <div className={\"calendar-view-horizontal-separator\"}/>\n                                    })\n                                }\n                            </div>\n                            {\n                                [...Array(this.DAYS_IN_A_WEEK)].map((value, column) => {\n                                    return (\n                                        <Col className={\"calendar-view-calendar-days\"}>\n                                            {\n                                                [...Array(this.HOURS_IN_A_DAY)].map((value, row) => {\n                                                    return (\n                                                        <div className={\"calendar-view-calendar-hours\"}>\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </Col>\n                                    )\n                                })\n                            }\n                        </Row>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        )\n    }\n}","import './SettingsView.css';\nimport React from 'react';\n\ntype SettingsViewState = {\n\n}\n\ntype SettingsViewProps = {\n}\n\nexport default class SettingsView extends React.Component<SettingsViewProps, SettingsViewState> {\n\n    render() {\n        return <div>Settings view</div>;\n    }\n}","export default __webpack_public_path__ + \"static/media/Calendar.bb613596.svg\";","export default __webpack_public_path__ + \"static/media/Settings.2cbb9c21.svg\";","import React from 'react';\nimport SidebarSplitViewController from './views/SidebarSplitViewController'\nimport LoginView from './views/LoginView'\nimport MeetingsOverviewView from './views/MeetingsOverviewView'\nimport CalendarView from './views/CalendarView'\nimport SettingsView from './views/SettingsView'\nimport calendar from './images/icons/Calendar.svg'\nimport settings from './images/icons/Settings.svg'\nimport { Fab } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\n// export const APP_COLOR = \"#6a53e4\";\n\nfunction App() {\n  if (isSignedIn()) {\n    const mainView = <CalendarView/>\n    const detailView = <MeetingsOverviewView dateRange={{startDate: new Date(), endDate: new Date()}}/>\n    const mainPage = {mainView, detailView, icon:calendar}\n    const settingsView = <SettingsView />\n    const settingsPage = {mainView: settingsView, icon:settings}\n    return (\n        <React.Fragment>\n          <SidebarSplitViewController pages={[mainPage, settingsPage]}/>\n          <Fab color=\"primary\" aria-label=\"add\">\n            <Add />\n          </Fab>\n        </React.Fragment>\n    )\n  } else {\n    return <LoginView />;\n  }\n}\n\nfunction isSignedIn() {\n  return true; // TODO: Implement this to read from browser storage\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}