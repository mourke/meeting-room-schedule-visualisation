{"version":3,"sources":["images/icons/Active indicator.svg","SidebarSplitViewController.tsx","LoginView.tsx","MeetingsOverviewView.tsx","CalendarView.tsx","images/icons/Calendar.svg","images/icons/Settings.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["React","Component","LoginView","loginButtonClicked","bind","console","log","className","style","width","margin","textAlign","onClick","this","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kXAAe,MAA0B,6C,UCmBeA,IAAMC,U,OChBzCC,G,wDAEjB,aAAe,IAAD,8BACV,cAAM,KAEDC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAHhB,E,sDAMd,WACIC,QAAQC,IAAI,oB,oBAGhB,WACI,OACI,qBAAKC,UAAW,mBAAhB,SACI,sBAAKA,UAAW,gBAAhB,UACI,sBAAKC,MAAO,CAACC,MAAO,MAAOC,OAAQ,SAAUC,UAAW,UAAxD,UACI,oBAAIJ,UAAW,oBAAf,0CACA,mBAAGA,UAAW,yBAAd,gFACA,wBAAQK,QAASC,KAAKV,mBAAoBI,UAAW,mBAArD,qCAEJ,sBAAMA,UAAW,uBAAjB,4D,GArBmBP,IAAMC,Y,MCQKD,IAAMC,U,MCAdD,IAAMC,UCXjC,ICAA,IC2BAa,MAjBf,WASI,OAAO,cAAC,EAAD,KCLIC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a1d2a653.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Active indicator.a5368acb.svg\";","import './SidebarSplitViewController.css';\nimport React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport activeIndicator from './images/icons/Active indicator.svg'\n\ntype SidebarSplitViewControllerState = {\n    index: number\n}\n\ntype SidebarSplitViewControllerChildren = {\n    mainView: React.ComponentElement<any, any>\n    detailView: React.ComponentElement<any, any>\n    icon: string\n}\n\ntype SidebarSplitViewControllerProps = {\n    pages: SidebarSplitViewControllerChildren[]\n}\n\nexport default class SidebarSplitViewController extends React.Component<SidebarSplitViewControllerProps, SidebarSplitViewControllerState> {\n\n    constructor(props: SidebarSplitViewControllerProps) {\n        super(props);\n\n        this.state = {index: 0};\n    }\n\n    currentPage() {\n        return this.props.pages[this.state.index]\n    }\n\n    activityIndicatorForIndex(index: number) {\n        if (this.state.index == index) {\n            return <img className=\"toolbar-active-indicator\" src={activeIndicator} alt={\"Active\"}/>;\n        } else {\n            return undefined;\n        }\n    }\n\n    changeTab(index: number) {\n        this.setState({index: index});\n    }\n\n    sidebar() {\n        return (\n            <div className=\"toolbar\">\n                <div>\n\n                </div>\n                <div className=\"toolbar-items-section\">\n                    {\n                        this.props.pages.map((value, index) => {\n                            return (\n                                <div className={\"toolbar-item\"}>\n                                    {this.activityIndicatorForIndex(index)}\n                                    <img onClick={() => this.changeTab(index)} style={{opacity: this.state.index == index ? \"100%\" : \"40%\"}} className=\"toolbar-item-img\" src={value.icon}/>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    {this.sidebar()}\n                    <Col>{this.currentPage().mainView}</Col>\n                    <Col className=\"splitview-detail-column\" xs={4}>{this.currentPage().detailView}</Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import './LoginView.css';\nimport React from 'react';\n\nexport default class LoginView extends React.Component {\n\n    constructor() {\n        super({});\n\n        this.loginButtonClicked = this.loginButtonClicked.bind(this);\n    }\n\n    loginButtonClicked() {\n        console.log(\"Button clicked\") // TODO: Call API\n    }\n\n    render() {\n        return (\n            <div className={\"login-background\"}>\n                <div className={\"login-popover\"}>\n                    <div style={{width: \"76%\", margin: \"0 auto\", textAlign: \"center\"}}>\n                        <h3 className={\"login-header-text\"}>Sign in to Microsoft Account</h3>\n                        <p className={\"login-information-text\"}>Connect your Microsoft account to sync, edit and add calendar data</p>\n                        <button onClick={this.loginButtonClicked} className={\"btn login-button\"}>Sign in with Outlook</button>\n                    </div>\n                    <span className={\"login-copyright-text\"}>Copyright Â© TCD SWENG 2021 Group 3</span>\n                </div>\n            </div>\n        )\n    }\n}\n","import './MeetingsOverviewView.css';\nimport React from 'react';\n\ntype MeetingsOverviewViewState = {\n    loading: boolean\n}\n\ntype MeetingsOverviewViewProps = {\n    meetings: object\n}\n\nexport default class MeetingsOverviewView extends React.Component<MeetingsOverviewViewProps, MeetingsOverviewViewState> {\n\n    render() {\n        return (\n            <div>\n                <h5>Meetings</h5>\n            </div>\n        );\n    }\n}","import './CalendarView.css';\nimport React from 'react';\n\ntype CalendarViewState = {\n    loading: boolean\n}\n\ntype CalendarViewProps = {\n    meetings: object\n}\n\nexport default class CalendarView extends React.Component<CalendarViewProps, CalendarViewState> {\n\n    render() {\n        return <div>Calendar view</div>;\n    }\n}","export default __webpack_public_path__ + \"static/media/Calendar.bb613596.svg\";","export default __webpack_public_path__ + \"static/media/Settings.2cbb9c21.svg\";","import React from 'react';\nimport SidebarSplitViewController from './SidebarSplitViewController'\nimport LoginView from \"./LoginView\";\nimport MeetingsOverviewView from \"./MeetingsOverviewView\";\nimport CalendarView from \"./CalendarView\";\nimport calendar from './images/icons/Calendar.svg'\nimport settings from './images/icons/Settings.svg'\n\nexport const APP_COLOR = \"#6a53e4\";\n\nfunction App() {\n  if (isSignedIn()) {\n    let meetings: any[] = []; // TODO: fetch from API\n    const mainView = <CalendarView meetings={meetings}/>;\n    const detailView = <MeetingsOverviewView meetings={meetings}/>;\n    const mainPage = {mainView:mainView, detailView:detailView, icon:calendar};\n    const settingsPage = {mainView:mainView, detailView: detailView, icon:settings}\n    return <SidebarSplitViewController  pages={[mainPage, settingsPage]}/>;\n  } else {\n    return <LoginView />;\n  }\n}\n\nfunction isSignedIn() {\n  return false; // TODO: Implement this to read from browser storage\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}