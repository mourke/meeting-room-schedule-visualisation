{"version":3,"sources":["models/Event.ts","API.ts","images/icons/Active indicator.svg","views/SidebarSplitViewController.tsx","views/LoginView.tsx","images/icons/Book.svg","images/icons/Camera.svg","images/icons/Group.svg","images/icons/Present.svg","views/MeetingsOverviewView.tsx","images/icons/Right Chevron.svg","views/CalendarView.tsx","views/SettingsView.tsx","views/addMeetingView.tsx","images/icons/Calendar.svg","images/icons/Settings.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EventType","SidebarSplitViewController","props","state","index","this","pages","className","src","activeIndicator","alt","setState","map","value","activityIndicatorForIndex","onClick","changeTab","style","opacity","icon","detail","undefined","currentPage","detailView","Col","xs","Container","fluid","height","Row","sidebar","padding","display","flexDirection","mainView","React","Component","client","a","assert","api","get","calendars","rooms","push","name","id","calendar","startDate","endDate","testImageURL","URL","today","Date","dateString","toDateString","nine","setHours","eleven","twoThirty","sevenFifty","overview","time","duration","category","conference","attendees","image","email","getFullYear","getMonth","getDate","birthday","call","catchup","startDateTime","getDay","endDateTime","meetings","hasOwnProperty","date","location","description","response","delete","API","MeetingsOverviewView","loading","error","empty","getMeetings","dateRange","result","Object","keys","length","emptyView","message","title","Group","Present","Camera","Book","entries","Fragment","toLocaleDateString","weekday","month","day","meeting","backgroundColor","meetingStringFromMeeting","imageForMeetingCategory","filter","cssFilterForMeetingCategory","flatMap","person","toString","body","loadingView","errorView","listView","start","end","getTime","options","hour12","hour","minute","toLocaleTimeString","CalendarView","DAYS_IN_A_WEEK","HOURS_IN_A_DAY","CELL_HEIGHT","currentWeek","now","nextWeek","bind","previousWeek","setInterval","loadFromAPI","prevProps","prevState","snapshot","firstDay","firstDayOfWeek","lastDay","setDate","startOfWeek","toLocaleString","lastWeek","lhs","rhs","getMinutes","getHours","offset","meetingTimeToYOffset","top","marginTop","paddingLeft","borderBottom","type","RightChevron","weekString","Array","dayName","isCurrentDay","datesAreSameDay","noGutters","flex","marginLeft","column","currentDay","row","meetingDurationToHeight","currentTimeIndicator","SettingsView","AddMeetingView","currentDateTimeString","meetingType","durationString","attendeeName","attendeeEmail","addAttendeePopoverOpen","handleNameChange","handleButtonsToggled","handleDateTimeChange","handleDurationChange","handleLocationChange","handleDescriptionChange","handleAttendeeNameChange","handleAttendeeEmailChange","handleAddAttende","submit","attendee","ListItem","divider","width","borderRadius","ListItemText","primary","event","target","String","newDate","setFullYear","setMonth","setMinutes","setSeconds","getSeconds","Number","popupState","close","checkForMeetingClash","addMeeting","TextField","marginRight","variant","margin","label","autoFocus","onChange","ToggleButtonGroup","exclusive","size","orientation","ToggleButton","color","Divider","utils","DateFnsUtils","DateTimePicker","InputProps","endAdornment","InputAdornment","position","fullWidth","List","component","maxHeight","overflow","renderAttendees","Button","marginBottom","App","usePopupState","popupId","mainPage","settingsPage","settings","addMeetingView","Fab","aria-label","Add","bindTrigger","Popover","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5217094e.chunk.js","sourcesContent":["import {Person} from './Person'\n\nexport enum EventType {\n    call = `#0085e3`,\n    birthday = `#ff623b`,\n    catchup = `#00a89d`,\n    conference = `#b891ff`\n}\n\nexport type Event = {\n    name: string\n    overview: string\n    category: EventType\n    time: Date\n    duration: number // in minutes\n    attendees: Person[]\n}\n\n","import { Client } from '@microsoft/microsoft-graph-client';\nimport { strict as assert } from 'assert';\nimport {Room} from './models/Room'\nimport {Person} from './models/Person'\nimport {Event as Meeting, Event, EventType} from './models/Event'\n\n\nexport module API {\n    let client: Client\n\n    /*\n    * description: fetches the list of calendar names and their IDs\n    * input: -\n    * output: array of the Room type\n    * */\n    export async function getListOfCalendarNamesAndIDs():Promise<Room[]> {\n        assert(client, \"Client must be initialised to call API methods.\");\n        const calendars = await client.api(\"/me/calendars\").get()\n        const rooms:Room[] = []\n        for (const value of calendars.value) {\n            rooms.push({name: value.name, id: value.id})\n        }\n        return rooms\n    }\n\n    /*\n     * description: fetches the calendar with the specified ID or name\n     * input: id OR name of calendar in string form\n     * output: Calendar object if fetch successful\n     *         Undefined if fetch not successful (no corresponding ID or name)\n     * */\n    export async function getCalendar(id:string):Promise<object|undefined> {\n        assert(client, \"Client must be initialised to call API methods.\");\n        const calendar = await client.api(`/me/calendars/${id}`).get()\n        if (calendar.id === id) {\n            return calendar\n        }\n        return undefined\n    }\n\n    /*\n    * description: fetches the meetings for a calender with a certain ID or name within a specified date range in a sorted manner\n    * input: id OR name of calendar in string form\n    *        startDate typescript Date object\n    *        endDate typescript Date object\n    * output: dictionary with dates and keys and arrays of meeting objects as values (first element = most recent)\n    *         undefined if fetch not successful\n    * */\n    export async function getMeetings(id: string, startDate: Date, endDate: Date): Promise<Record<string, Meeting[]> | undefined> {\n        const testImageURL = new URL(\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\")\n        const today = new Date()\n        const dateString = today.toDateString()\n        const nine = new Date(today)\n        nine.setHours(9, 0)\n        const eleven = new Date(today)\n        eleven.setHours(11, 0)\n        const twoThirty = new Date(today)\n        twoThirty.setHours(14, 30)\n        const sevenFifty = new Date(today)\n        sevenFifty.setHours(7, 50)\n        return {\n            [dateString]: [{\n                name: \"Kickoff Meeting\",\n                overview: \"Sample meeting overview.\",\n                time: nine,\n                duration: 110,\n                category: EventType.conference,\n                attendees: [\n                    {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                    {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            }],\n            [new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1).toDateString()]: [{\n                    name: \"Planning\",\n                    overview: \"Sample meeting overview.\",\n                    time: twoThirty,\n                    duration: 60,\n                    category: EventType.birthday,\n                    attendees: [\n                        {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                        {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                        {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            }],\n            [new Date(today.getFullYear(), today.getMonth(), today.getDate() + 2).toDateString()]: [{\n                    name: \"Design Review\",\n                    overview: \"Sample meeting overview.\",\n                    time: eleven,\n                    duration: 60,\n                    category: EventType.call,\n                    attendees: [\n                        {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                        {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            }],\n            [new Date(today.getFullYear(), today.getMonth(), today.getDate() + 3).toDateString()]: [{\n                    name: \"Project Meeting\",\n                    overview: \"Sample meeting overview.\",\n                    time: sevenFifty,\n                    duration: 60,\n                    category: EventType.catchup,\n                    attendees: [\n                        {name: \"John\", image: testImageURL, email: \"john@gmail.com\"},\n                        {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                        {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"},\n                        {name: \"Mark\", image: testImageURL, email: \"mark@gmail.com\"}]\n            }]\n        }\n        // assert(client, \"Client must be initialised to call API methods.\")\n        // const startDateTime = `${startDate.getFullYear()}-${startDate.getMonth()}-${startDate.getDay()}T${startDate.getHours()}:${startDate.getMinutes()}:${startDate.getSeconds()}`\n        // const endDateTime  = `${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDay()}T${endDate.getHours()}:${endDate.getMinutes()}:${endDate.getSeconds()}`\n        // const meetings = await client.api(`me/calendars/${id}/calendarView?startDateTime=${startDateTime}&endDateTime=${endDateTime}&orderby=start/dateTime`).get()\n        // if (meetings.hasOwnProperty(\"value\")) {\n        //     const dateMeetingDictionary: {[key:string]: object[]} = {}\n        //     for (const meeting of meetings) {\n        //         const meetingDate = meeting.start.dateTime.split(\"T\").pop()\n        //         if (!dateMeetingDictionary[meetingDate]) {\n        //             dateMeetingDictionary[meetingDate] = []\n        //         }\n        //         dateMeetingDictionary[meetingDate].push(meeting)\n        //     }\n        //     return dateMeetingDictionary\n        // }\n        // return undefined\n    }\n\n    /*\n    * description: fetches TODAYS meetings for a calender with a certain ID or name in a sorted manner\n    * input: id OR name of calendar in string form\n    * output: array of meeting objects (first element = most recent)\n    *         undefined if fetch not successful\n    * */\n    export async function getMeetingsToday(id:string):Promise<object[]|undefined> {\n        assert(client, \"Client must be initialised to call API methods.\");\n        const today = new Date();\n        const startDateTime = `${today.getFullYear()}-${today.getMonth()}-${today.getDay()}T00:00:00`\n        const endDateTime = `${today.getFullYear()}-${today.getMonth()}-${today.getDay()}T23:59:59`\n        const meetings = await client.api(`/me/calendars/${id}/calendarView?startDateTime=${startDateTime}&endDateTime=${endDateTime}&orderby=start/dateTime`).get()\n        if (meetings.hasOwnProperty(\"value\")) {\n            return meetings\n        }\n        return undefined\n    }\n\n    /*\n    * description: creates and adds events with given input parameters\n    * input: id OR name of calendar(meeting room), name of meeting, category of meeting, start date of meeting, duration of meeting in minutes, location of meeting, description of meeting, attendees in meeting\n    * output: meeting object if successful or undefined if not successful\n    * */\n\n    export async function addMeeting(id:string, name:string, category:EventType, date:Date, duration:number, location:string, description:string, attendees:Person[]):Promise<object|undefined>{\n        /*assert(client, \"Client must be initialised to call API methods.\");\n        const endDate = new Date(date.getTime() + duration*60000)\n        const startDateTime = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()}T${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n        const endDateTime = `${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDay()}T${endDate.getHours()}:${endDate.getMinutes()}:${endDate.getSeconds()}`\n\n        const meetingAttendees:{emailAddress: {address: string, name: string}, type: string}[] = []\n        for (const attendee of attendees) {\n            meetingAttendees.push({emailAddress: {address: attendee.email,name: attendee.name},type:\"required\"})\n        }\n\n        const event = {\n            subject: name,\n            body: {\n                contentType: \"text\",\n                content: description\n            },\n            categories: [category],\n            start: {\n                dateTime: startDateTime,\n                timeZone: \"IE\"\n            },\n            end: {\n                dateTime: endDateTime,\n                timeZone: \"IE\"\n            },\n            location: {\n                display: location\n            },\n            attendees: meetingAttendees\n        }\n\n        const response = await client.api(`/me/calendars/${id}/events`).post(event)\n        //not sure about this part, will need access to api to test\n        if (response.hasOwnProperty(\"error\")) {\n            return undefined\n        }\n        return response*/\n        return {response:\"response\"}\n    }\n\n\n\n    /*\n    * description: checks if meeting user wants to add clashes with another meeting\n    * input: id OR name of calendar(meeting room), date of the start of meeting, duration of meeting in minutes\n    * output: true if there is a meeting clash\n    *         false if there is no meeting clash\n    *         undefined if an error occured\n    * */\n    export async function checkForMeetingClash(id:string, date:Date, duration:number):Promise<Boolean|undefined>{\n        assert(client, \"Client must be initialised to call API methods.\");\n        /*const endDate = new Date(date.getTime() + duration*60000)\n        const startDateTime = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()}T${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n        const endDateTime = `${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDay()}T${endDate.getHours()}:${endDate.getMinutes()}:${endDate.getSeconds()}`\n        const meetings = await client.api(`me/calendars/${id}/calendarView?startDateTime=${startDateTime}&endDateTime=${endDateTime}&orderby=start/dateTime`).get()\n        if (meetings.hasOwnProperty(\"value\")) {\n            return Object.keys(meetings.value).length === 0;\n        }\n        return undefined*/\n        return false\n    }\n    /*\n    * description: deletes event with given id\n    * input: event id \n    * output: true if successful or undefined if not successful\n    * */\n    export async function deleteMeeting(id:string):Promise<Boolean|undefined>{\n        assert(client, \"Client must be initialised to call API methods.\");\n        const deleteM = await client.api(`/me/calendars/${id}/events`).delete()\n        if (deleteM.hasOwnProperty(\"error\")) {\n            return undefined\n        }\n        return true\n    }\n\n\n}\n","export default __webpack_public_path__ + \"static/media/Active indicator.a5368acb.svg\";","import './SidebarSplitViewController.css'\nimport React from 'react'\nimport {Col, Container, Row} from 'react-bootstrap'\nimport activeIndicator from '../images/icons/Active indicator.svg'\n\ntype SidebarSplitViewControllerState = {\n    index: number\n}\n\ntype SidebarSplitViewControllerChildren = {\n    mainView: React.ComponentElement<any, any>\n    detailView?: React.ComponentElement<any, any>\n    icon: string\n}\n\ntype SidebarSplitViewControllerProps = {\n    pages: SidebarSplitViewControllerChildren[]\n}\n\nexport default class SidebarSplitViewController extends React.Component<SidebarSplitViewControllerProps, SidebarSplitViewControllerState> {\n\n    constructor(props: SidebarSplitViewControllerProps) {\n        super(props)\n\n        this.state = {index: 0}\n    }\n\n    currentPage() {\n        return this.props.pages[this.state.index]\n    }\n\n    activityIndicatorForIndex(index: number) {\n        if (this.state.index === index) {\n            return <img className=\"toolbar-active-indicator\" src={activeIndicator} alt={\"Active\"}/>\n        } else {\n            return undefined\n        }\n    }\n\n    changeTab(index: number) {\n        this.setState({index})\n    }\n\n    sidebar() {\n        return (\n            <div className=\"toolbar\">\n                <div>\n\n                </div>\n                <div className=\"toolbar-items-section\">\n                    {\n                        this.props.pages.map((value, index) => {\n                            return (\n                                <div className={\"toolbar-item\"}>\n                                    {this.activityIndicatorForIndex(index)}\n                                    <img onClick={() => this.changeTab(index)} style={{opacity: this.state.index === index ? \"100%\" : \"40%\"}} className=\"toolbar-item-img\" src={value.icon} alt={`Toolbar item ${index}`}/>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        let detail: JSX.Element | undefined\n\n        if (this.currentPage().detailView !== undefined) {\n            detail = <Col className=\"splitview-detail-column\" xs={3}>{this.currentPage().detailView}</Col>\n        } else {\n            detail = undefined\n        }\n\n        return (\n            <Container fluid style={{height: \"100vh\"}}>\n                <Row style={{height: \"100%\"}}>\n                    {this.sidebar()}\n                    <Col style={{padding: 0, height: \"100%\", display: \"flex\", flexDirection: \"column\"}}>\n                        {this.currentPage().mainView}\n                    </Col>\n                    {detail}\n                </Row>\n            </Container>\n        )\n    }\n}","import './LoginView.css'\nimport React from 'react'\n\ntype LoginViewState = {\n    login: boolean\n    error?: Error\n    roomSelection: boolean\n}\n\ntype LoginViewProps = {\n}\n\nexport default class LoginView extends React.Component<LoginViewProps, LoginViewState> {\n\n    constructor(props: LoginViewProps) {\n        super(props)\n\n        this.loginButtonClicked = this.loginButtonClicked.bind(this)\n    }\n\n    loginButtonClicked() {\n        console.log(\"Button clicked\") // TODO: Call API\n    }\n\n    render() {\n        return (\n            <div className={\"login-background\"}>\n                <div className={\"login-popover\"}>\n                    <div style={{width: \"76%\", margin: \"0 auto\", textAlign: \"center\"}}>\n                        <h3 className={\"login-header-text\"}>Sign in to Microsoft Account</h3>\n                        <p className={\"login-information-text\"}>Connect your Microsoft account to sync, edit and add calendar data</p>\n                        <button onClick={this.loginButtonClicked} className={\"btn login-button\"}>Sign in with Outlook</button>\n                    </div>\n                    <span className={\"login-copyright-text\"}>Copyright © TCD SWENG 2021 Group 3</span>\n                </div>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/Book.500a8c14.svg\";","export default __webpack_public_path__ + \"static/media/Camera.9f633ba0.svg\";","export default __webpack_public_path__ + \"static/media/Group.ab6a2326.svg\";","export default __webpack_public_path__ + \"static/media/Present.ed74593a.svg\";","import './MeetingsOverviewView.css'\nimport React from 'react'\nimport {API} from '../API'\nimport {Event as Meeting, EventType} from '../models/Event'\nimport Book from '../images/icons/Book.svg'\nimport Camera from '../images/icons/Camera.svg'\nimport Group from '../images/icons/Group.svg'\nimport Present from '../images/icons/Present.svg'\n\ntype MeetingsOverviewViewState = {\n    loading: boolean\n    error?: Error\n    empty: boolean\n}\n\ntype MeetingsOverviewViewProps = {\n    dateRange: {startDate: Date, endDate: Date}\n}\n\nexport default class MeetingsOverviewView extends React.Component<MeetingsOverviewViewProps, MeetingsOverviewViewState> {\n\n    // A date string key and an array of event values\n    private meetings: Record<string, Meeting[]>\n\n    constructor(props: MeetingsOverviewViewProps) {\n        super(props)\n\n        this.meetings = {}\n        this.state = {loading: false, error: undefined, empty: true}\n    }\n\n    async componentDidMount() {\n        this.setState({loading: true})\n\n        // Call API\n\n        const result = await API.getMeetings(\"\", this.props.dateRange.startDate, this.props.dateRange.endDate)\n\n        if (result === undefined) {\n            // handle error\n            return\n        }\n\n        this.meetings = result as Record<string, Meeting[]>\n        this.setState({loading: false, empty: Object.keys(this.meetings).length === 0, error: undefined})\n    }\n\n    errorView(error: Error) {\n        return this.emptyView(error.name, error.message)\n    }\n\n    emptyView(title = \"Looks like there's no meetings\", message = \"Have a day off!\") {\n        return (\n            <div style={{height: \"100%\"}}>\n                <div className={\"meetings-overview-empty-view\"}>\n                    <h4 className={\"meetings-overview-empty-view-header\"}>{title}</h4>\n                    <span className={\"meetings-overview-empty-view-message\"}>{message}</span>\n                </div>\n            </div>\n        )\n    }\n\n    loadingView() {\n        return (\n            <div className={\"meetings-overview-loading-view\"}>\n                <div className={\"meetings-overview-loading-view-spinner\"}>\n                </div>\n            </div>\n        )\n    }\n\n    static meetingStringFromMeeting(meeting: Meeting) {\n        const start = meeting.time\n        const minutesInMilliseconds = 60000\n        const end = new Date(start.getTime() + meeting.duration*minutesInMilliseconds)\n        const options: Intl.DateTimeFormatOptions = {hour12: false, hour: \"2-digit\", minute: \"2-digit\"}\n\n        return `${start.toLocaleTimeString(\"default\", options)} - ${end.toLocaleTimeString(\"default\", options)}`\n    }\n\n    imageForMeetingCategory(category: EventType) {\n        switch (category) {\n            case EventType.conference:\n                return Group\n            case EventType.birthday:\n                return Present\n            case EventType.call:\n                return Camera\n            case EventType.catchup:\n                return Book\n        }\n    }\n\n    cssFilterForMeetingCategory(category: EventType) {\n        // colours generated from https://codepen.io/sosuke/pen/Pjoqqp using code from https://stackoverflow.com/a/43960991/604861\n        // we could alternatively just put the function here but the code would have to be torn apart to return exactly what we want\n        switch (category) {\n            case EventType.conference:\n                return \"invert(62%) sepia(8%) saturate(7333%) hue-rotate(215deg) brightness(104%) contrast(101%)\"\n            case EventType.birthday:\n                return \"invert(49%) sepia(78%) saturate(2895%) hue-rotate(338deg) brightness(106%) contrast(101%)\"\n            case EventType.call:\n                return \"invert(61%) sepia(84%) saturate(6031%) hue-rotate(184deg) brightness(93%) contrast(102%)\"\n            case EventType.catchup:\n                return \"invert(47%) sepia(86%) saturate(2495%) hue-rotate(145deg) brightness(93%) contrast(101%)\"\n        }\n    }\n\n    listView() {\n        return (\n            <ul className={\"meetings-overview-meetings\"}>\n                {Object.entries(this.meetings).map(([dateString, meetings]) =>\n                    (\n                        <React.Fragment>\n                            <h6 className={\"meetings-overview-header-text\"}>{new Date(dateString).toLocaleDateString(\"default\", {weekday: \"long\", month: \"long\", day: \"numeric\"})}</h6>\n                            {meetings.map((meeting, index) =>\n                                (\n                                    <li>\n                                        <div className={\"meetings-overview-meeting-color-tab\"}\n                                             style={{backgroundColor: meeting.category}}/>\n                                        <div className={\"meetings-overview-meeting-text\"}>\n                                            <h6>{meeting.name}</h6>\n                                            <span>{MeetingsOverviewView.meetingStringFromMeeting(meeting)}</span>\n                                            <div className={\"meetings-overview-meeting-icon\"}\n                                                 style={{backgroundColor: `${meeting.category}59`}}> {/* 59 is alpha 0.35*/}\n                                                <img src={this.imageForMeetingCategory(meeting.category)}\n                                                     style={{filter: this.cssFilterForMeetingCategory(meeting.category)}}\n                                                     alt={\"\"}/>\n                                            </div>\n                                        </div>\n                                        <ul className={\"meetings-overview-meeting-attendees\"}>\n                                            {meeting.attendees.flatMap((person, index) => {\n                                                if (person.image === undefined || index > 5) { // only have a max of 6 images\n                                                    return []\n                                                }\n                                                return [(\n                                                    <li>\n                                                        <img src={person.image.toString()}\n                                                             alt={`${person.name}'s avatar`}/>\n                                                    </li>\n                                                )]\n                                            })}\n                                        </ul>\n                                    </li>\n                                ))}\n                        </React.Fragment>\n                    ))}\n            </ul>\n        )\n    }\n\n    render() {\n        let body: JSX.Element\n\n        if (this.state.loading) {\n            body = this.loadingView()\n        } else if (this.state.empty) {\n            body = this.emptyView()\n        } else if (this.state.error != null) {\n            body = this.errorView(this.state.error)\n        } else {\n            body = this.listView()\n        }\n\n        return (\n            <div className={\"meetings-overview-scroll-container scroll-container-hidden-bars\"}>\n                <h5 className={\"meetings-overview-heading\"}>Meetings</h5>\n                {body}\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/Right Chevron.4e4a1046.svg\";","import './CalendarView.css'\nimport React from 'react'\nimport RightChevron from '../images/icons/Right Chevron.svg'\nimport {Col, Container, Row} from 'react-bootstrap'\nimport {Event as Meeting} from '../models/Event'\nimport {API} from '../API'\nimport MeetingsOverviewView from \"./MeetingsOverviewView\"\n\ntype CalendarViewState = {\n    loading: boolean\n    currentWeek: Date\n    now: Date\n    meetings: Record<string, Meeting[]>\n}\n\ntype CalendarViewProps = {\n}\n\nexport default class CalendarView extends React.Component<CalendarViewProps, CalendarViewState> {\n\n    private readonly DAYS_IN_A_WEEK = 7\n    private readonly HOURS_IN_A_DAY = 24\n\n    private readonly CELL_HEIGHT = 80\n\n    constructor(props: CalendarViewProps) {\n        super(props)\n\n        this.state = {loading: false, currentWeek: new Date(), now: new Date(), meetings: {}}\n        this.nextWeek = this.nextWeek.bind(this)\n        this.previousWeek = this.previousWeek.bind(this)\n\n        const minuteInMilliseconds = 60 * 1000\n        setInterval(() => this.setState({now: new Date()}), minuteInMilliseconds)\n    }\n\n    async componentDidMount() {\n        await this.loadFromAPI() // trigger initial load\n    }\n\n    async componentDidUpdate(prevProps: Readonly<CalendarViewProps>, prevState: Readonly<CalendarViewState>, snapshot?: any) {\n        if (prevState.loading !== this.state.loading) {\n            return // stop recursive calling\n        }\n\n        // this will be called when week is changed and when now is updated (every minute)\n        await this.loadFromAPI()\n    }\n\n    async loadFromAPI() {\n        this.setState({loading: true})\n\n        const firstDay = this.firstDayOfWeek(this.state.currentWeek)\n        const lastDay = new Date(firstDay)\n        lastDay.setDate(firstDay.getDate() + this.DAYS_IN_A_WEEK - 1)\n        const result = await API.getMeetings(\"\", firstDay, lastDay)\n\n        if (result === undefined) {\n            // handle error\n            return\n        }\n\n        const meetings = result as Record<string, Meeting[]>\n\n        this.setState({meetings, loading: false})\n    }\n\n    firstDayOfWeek(date: Date) {\n        const startOfWeek = date.getDate() - date.getDay() // First day is the day of the month - the day of the week\n        const firstDay = new Date(date)\n        firstDay.setDate(startOfWeek)\n        return firstDay\n    }\n\n    weekString(date: Date) {\n        const firstDay = this.firstDayOfWeek(date)\n        const lastDay = new Date(firstDay)\n        lastDay.setDate(firstDay.getDate() + this.DAYS_IN_A_WEEK - 1)\n        const month = lastDay.toLocaleString('default', { month: 'long' }) // use the month of the last date in case we have changed month\n\n        return `${firstDay.getDate()} - ${lastDay.getDate()} ${month}`\n    }\n\n    previousWeek() {\n        const currentWeek = this.state.currentWeek\n        const lastWeek = new Date(currentWeek)\n        lastWeek.setDate(currentWeek.getDate() - this.DAYS_IN_A_WEEK)\n        this.setState({currentWeek: lastWeek})\n    }\n\n    nextWeek() {\n        const currentWeek = this.state.currentWeek\n        const nextWeek = new Date(currentWeek)\n        nextWeek.setDate(currentWeek.getDate() + this.DAYS_IN_A_WEEK)\n        this.setState({currentWeek: nextWeek})\n    }\n\n    datesAreSameDay(lhs: Date, rhs: Date) {\n        return lhs.getDate() === rhs.getDate() &&\n               lhs.getFullYear() === rhs.getFullYear() &&\n               lhs.getMonth() === rhs.getMonth()\n    }\n\n    meetingDurationToHeight(duration: number) {\n        const heightPerMinute = this.CELL_HEIGHT/60 // 60 minutes in an hour\n        return duration * heightPerMinute\n    }\n\n    meetingTimeToYOffset(time: Date) {\n        return ((this.CELL_HEIGHT/60) * time.getMinutes()) + this.CELL_HEIGHT * time.getHours()\n    }\n\n    currentTimeIndicator() {\n        const offset = this.meetingTimeToYOffset(this.state.now)\n        return (\n            <React.Fragment>\n                <div className={\"calendar-view-calendar-time-now-ball\"} style={{top: offset}}/>\n                <div className={\"calendar-view-calendar-time-now-bar\"} style={{top: offset}}/>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{marginTop: \"30px\", paddingLeft: \"25px\", borderBottom: \"1px solid rgba(211, 211, 211, 0.5)\"}}>\n                    <div className={\"calendar-view-stepper-control\"}>\n                        <button onClick={this.previousWeek} type={\"button\"} className={\"btn btn-light\"}>\n                            <img className={\"calendar-view-stepper-control-left-image\"} src={RightChevron} alt={\"Go back a week\"}/>\n                        </button>\n                        <div className={\"calendar-view-stepper-control-separator\"}/>\n                        <button onClick={this.nextWeek} type={\"button\"} className={\"btn btn-light\"}>\n                            <img src={RightChevron} alt={\"Go forward a week\"}/>\n                        </button>\n                    </div>\n                    <h5 className={\"calendar-view-current-week\"}>{this.weekString(this.state.currentWeek)}</h5>\n                </div>\n                <Container className={\"calendar-view\"}>\n                    <Row className={\"calendar-view-header\"}>\n                        {\n                            [...Array(this.DAYS_IN_A_WEEK)].map((value, index) => {\n                                const firstDay = this.firstDayOfWeek(this.state.currentWeek)\n                                const day = new Date(firstDay)\n                                day.setDate(firstDay.getDate() + index)\n                                const dayName = day.toLocaleString('default', { weekday: 'short' })\n                                const isCurrentDay = this.datesAreSameDay(day, this.state.now)\n\n                                return (\n                                    <Col className={`calendar-view-header-weekday ${isCurrentDay ? \"calendar-view-header-current-weekday\" : \"\" }`}>\n                                        <h6>{dayName}</h6>\n                                        <h5>{day.getDate()}</h5>\n                                    </Col>\n                                )\n                            })\n                        }\n                    </Row>\n                    <Row className={\"calendar-view-calendar scroll-container-hidden-bars\"}>\n                        <div className={\"calendar-view-calendar-times\"}>\n                            {\n                                [...Array(this.HOURS_IN_A_DAY)].map((value, index) => {\n                                    const time = new Date(this.state.now)\n                                    time.setHours(index)\n                                    return (\n                                        <div className={\"calendar-view-calendar-time\"} style={{height: this.CELL_HEIGHT}}>\n                                            <span>{time.toLocaleTimeString(\"default\", {hour12: true, hour: \"numeric\"})}</span>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <Row noGutters={true} style={{flex: 1, marginLeft: \"-10px\"}}>\n                            <div className={\"calendar-view-horizontal-separators\"}>\n                                {\n                                    [...Array(this.HOURS_IN_A_DAY)].map((value, index) => <div\n                                        className={\"calendar-view-horizontal-separator\"} style={{height: this.CELL_HEIGHT}}/>)\n                                }\n                            </div>\n                            {\n                                [...Array(this.DAYS_IN_A_WEEK)].map((value, column) => {\n                                    const firstDay = this.firstDayOfWeek(this.state.currentWeek)\n                                    const currentDay = new Date(firstDay)\n                                    currentDay.setDate(firstDay.getDate() + column)\n                                    return (\n                                        <Col className={\"calendar-view-calendar-days\"}>\n                                            {\n                                                [...Array(this.HOURS_IN_A_DAY)].map((value, row) => <div\n                                                    style={{height: this.CELL_HEIGHT}}/>)\n                                            }\n                                            {\n                                                Object.entries(this.state.meetings).filter((value) => {\n                                                    const dateString = value[0]\n                                                    const day = new Date(dateString)\n                                                    return this.datesAreSameDay(day, currentDay)\n                                                })[0]?.flatMap((value) => (typeof value === \"string\") ? [] : (value as Meeting[])).map((meeting) => (\n                                                    <div className={\"calendar-view-calendar-meeting\"} style={\n                                                        {\n                                                            backgroundColor: `${meeting.category}CC`, // CC is the HEX code for 80% transparency\n                                                            top: this.meetingTimeToYOffset(meeting.time),\n                                                            height: this.meetingDurationToHeight(meeting.duration)\n                                                        }\n                                                    }>\n                                                        <p className={\"calendar-view-calendar-meeting-name\"}>{meeting.name}</p>\n                                                        <p className={\"calendar-view-calendar-meeting-time\"}>{MeetingsOverviewView.meetingStringFromMeeting(meeting)}</p>\n                                                    </div>\n                                                ))\n                                            }\n                                            {\n                                                this.datesAreSameDay(this.state.now, currentDay) ? this.currentTimeIndicator() : undefined\n                                            }\n                                        </Col>\n                                    )})\n                            }\n                        </Row>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        )\n    }\n}","import './SettingsView.css';\nimport React from 'react';\n\ntype SettingsViewState = {\n\n}\n\ntype SettingsViewProps = {\n}\n\nexport default class SettingsView extends React.Component<SettingsViewProps, SettingsViewState> {\n\n    render() {\n        return <div>Settings view</div>;\n    }\n}","import React from 'react'\nimport {EventType} from '../models/Event'\nimport {Person} from '../models/Person'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab'\nimport {DateTimePicker, MuiPickersUtilsProvider} from '@material-ui/pickers'\nimport {MaterialUiPickersDate} from '@material-ui/pickers/typings/date'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {Divider, List, ListItem, ListItemText} from '@material-ui/core'\nimport {PopupState} from 'material-ui-popup-state/hooks'\nimport {API} from '../API'\n\ntype AddMeetingViewProps = {\n    popupState:PopupState\n}\ntype AddMeetingViewState = {\n    name:string,\n    description:string,\n    location:string,\n    date:Date,\n    currentDateTimeString:string,\n    meetingType:EventType,\n    durationString: string,\n    duration:number,\n    attendees:Person[],\n    attendeeName:string,\n    attendeeEmail:string,\n    addAttendeePopoverOpen:boolean,\n}\n\nexport default class AddMeetingView extends React.Component<AddMeetingViewProps, AddMeetingViewState>\n{\n    constructor(props:AddMeetingViewProps) {\n        super(props);\n        const today = new Date()\n        this.state = {\n            name: \"\",\n            description: \"\",\n            location: \"\",\n            date: new Date(),\n            currentDateTimeString: `${today.getFullYear()}-${today.getMonth()}-${today.getDay()}T${today.getHours()}:${today.getMinutes()}`,\n            meetingType: EventType.conference,\n            durationString: \"60\",\n            duration: 60,\n            attendees: [/*{name: \"John\", email: \"John@gmail.com\"}, {name: \"Danny\", email: \"Danny@gmail.com\"}*/],\n            attendeeName: \"\",\n            attendeeEmail: \"\",\n            addAttendeePopoverOpen: false,\n        }\n\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleButtonsToggled = this.handleButtonsToggled.bind(this)\n        this.handleDateTimeChange = this.handleDateTimeChange.bind(this)\n        this.handleDurationChange = this.handleDurationChange.bind(this)\n        this.handleLocationChange = this.handleLocationChange.bind(this)\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\n        this.handleAttendeeNameChange = this.handleAttendeeNameChange.bind(this)\n        this.handleAttendeeEmailChange = this.handleAttendeeEmailChange.bind(this)\n        this.handleAddAttende = this.handleAddAttende.bind(this)\n        this.submit = this.submit.bind(this)\n    }\n\n    renderAttendees(){\n        const testImageURL = new URL(\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\")\n        return this.state.attendees.map(attendee => {\n            return <ListItem divider>\n                <img src={testImageURL.toString()} style={{width: '25px', height: '25px', borderRadius: '50%'}}/>\n                <ListItemText primary={`${attendee.name}   ${attendee.email}`} />\n            </ListItem>\n        })\n    }\n\n    handleNameChange(event: React.ChangeEvent<HTMLInputElement>){\n        this.setState({name: event.target.value})\n    }\n\n    handleButtonsToggled(event:React.MouseEvent<HTMLElement, MouseEvent>, value:any){\n        if(String(value) === \"Conference\"){\n            this.setState({meetingType: EventType.conference})\n        }else if(String(value) === \"Call\"){\n            this.setState({meetingType: EventType.call})\n        }else if(String(value) === \"Birthday\"){\n            this.setState({meetingType: EventType.birthday})\n        }else if(String(value) === \"Catchup\"){\n            this.setState({meetingType: EventType.catchup})\n        }\n    }\n\n    handleDateTimeChange(date:MaterialUiPickersDate){\n        if(date != null){\n            const newDate = new Date()\n            newDate.setFullYear(date.getFullYear())\n            newDate.setMonth(date.getMonth())\n            newDate.setDate(date.getDay())\n            newDate.setHours(date.getHours())\n            newDate.setMinutes(date.getMinutes())\n            newDate.setSeconds(date.getSeconds())\n            this.setState({date: newDate})\n        }\n    }\n\n    handleDurationChange(event: React.ChangeEvent<HTMLInputElement>) {\n        if(event.target.value === \"\" || event.target.value === \" \"){\n            this.setState({durationString: event.target.value})\n            this.setState({duration: 0})\n        }\n        if(typeof Number(event.target.value) === \"number\"){\n            if(Number(event.target.value) > 0 && Number(event.target.value)<=3600) {\n                this.setState({durationString: event.target.value})\n                this.setState({duration: Number(event.target.value)})\n            }\n        }\n    }\n\n    handleLocationChange(event: React.ChangeEvent<HTMLInputElement>){\n        this.setState({location: event.target.value})\n    }\n\n    handleDescriptionChange(event: React.ChangeEvent<HTMLInputElement>){\n        this.setState({description: event.target.value})\n    }\n\n    handleAttendeeNameChange(event: React.ChangeEvent<HTMLInputElement>){\n        this.setState({attendeeName: event.target.value})\n    }\n\n    handleAttendeeEmailChange(event: React.ChangeEvent<HTMLInputElement>){\n        this.setState({attendeeEmail: event.target.value})\n    }\n\n    handleAddAttende() {\n        const attendee: Person = {name: this.state.attendeeName, email: this.state.attendeeEmail}\n        const attendees: Person[] = this.state.attendees\n        if (attendee.name!==\"\" && attendee.email!==\"\"){\n            attendees.push(attendee)\n            this.setState({attendeeName: \"\"})\n            this.setState({attendeeEmail: \"\"})\n            this.setState({attendees: attendees})\n        }\n    }\n\n    submit(){\n        this.props.popupState.close()\n        //TODO: Call API\n        if(!API.checkForMeetingClash(\"\", this.state.date, this.state.duration)) {\n            API.addMeeting(\"\", this.state.name, this.state.meetingType, this.state.date, this.state.duration, this.state.location, this.state.description, this.state.attendees)\n        }\n\n    }\n\n    render() {\n\n        return(\n            <div className=\"AddMeetingView\" style={{\n                width: '350px',\n                height: '700px;'\n            }}>\n                <header className=\"AddMeetingView-Header\">\n\n                    <TextField style={{marginLeft:\"10px\", marginRight:\"10px\", width:\"330px\"}} variant=\"outlined\"  margin=\"normal\" id=\"Meeting Name\" label=\"Meeting Name\" name=\"Meeting Name\" autoFocus value={this.state.name} onChange={this.handleNameChange} />\n\n                    <ToggleButtonGroup style={{marginLeft:\"10px\", marginRight:\"10px\", width:\"330px\"}} value={this.state.meetingType}  exclusive id=\"Meeting Type\" size=\"small\" orientation=\"horizontal\" onChange={this.handleButtonsToggled}>\n                        <ToggleButton style={this.state.meetingType===EventType.conference ? {backgroundColor:EventType.conference, color:\"white\"} : {}} value=\"Conference\">\n                            💬 conference\n                        </ToggleButton>\n                        <Divider></Divider>\n                        <ToggleButton style={this.state.meetingType===EventType.call ? {backgroundColor:EventType.call, color:\"white\"} : {}} value=\"Call\">\n                            📞 Call\n                        </ToggleButton>\n                        <ToggleButton style={this.state.meetingType===EventType.birthday ? {backgroundColor:EventType.birthday, color:\"white\"} : {}} value=\"Birthday\">\n                            🎁 birthday\n                        </ToggleButton>\n                        <ToggleButton style={this.state.meetingType===EventType.catchup ? {backgroundColor:EventType.catchup, color:\"white\"} : {}} value=\"Catchup\">\n                            ❐ catchup\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n\n                    <MuiPickersUtilsProvider  utils={DateFnsUtils}>\n                        <DateTimePicker style={{marginTop:\"12px\", width:\"150px\", marginLeft:\"10px\", marginRight:\"30px\"}} label=\"Meeting Time\"  value={this.state.date} onChange={this.handleDateTimeChange} />\n                    </MuiPickersUtilsProvider>\n\n                    <TextField variant=\"outlined\" style={{width: '145px', marginTop:\"20px\"}} type=\"number\" margin=\"dense\" id=\"Duration\" label=\"Duration\" name=\"Duration\" autoFocus value={this.state.durationString} onChange={this.handleDurationChange}InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">minutes</InputAdornment>,\n                    }} />\n\n                    <TextField style={{marginLeft:\"10px\", marginRight:\"10px\", width:\"330px\", }} variant=\"outlined\" fullWidth color=\"primary\" margin=\"normal\" id=\"Add Location\" label=\"📍 Add Location\" name=\"Add Location\" autoFocus value={this.state.location} onChange={this.handleLocationChange}/>\n\n                    <TextField style={{marginLeft:\"10px\", marginRight:\"10px\", width:\"330px\"}} color=\"primary\" variant=\"outlined\" fullWidth margin=\"normal\" id=\"Add Description\" label=\"☰ Add Description\" name=\"Add Description\" autoFocus value={this.state.description} onChange={this.handleDescriptionChange}/>\n\n                    <h6 style={{marginLeft:\"10px\", marginRight:\"10px\", width:\"330px\"}}>Attendees:</h6>\n\n\n                    <List component=\"nav\" style={{maxHeight:\"80px\", overflow:\"auto\"}}>\n                        {this.renderAttendees()}\n                    </List>\n\n                    <TextField style={{width: \"128px\", height:\"50px\", marginLeft:\"10px\"}} color=\"primary\" variant=\"outlined\" margin=\"normal\" id=\"Attendee Name\" label=\"Attendee Name\" name=\"Attendee Name\" autoFocus value={this.state.attendeeName} onChange={this.handleAttendeeNameChange}/>\n                    <TextField style={{width: \"128px\", height:\"50px\", marginLeft:\"5px\"}} color=\"primary\" variant=\"outlined\" margin=\"normal\" id=\"Attendee Email\" label=\"Attendee Email\" name=\"Attendee Email\" autoFocus value={this.state.attendeeEmail} onChange={this.handleAttendeeEmailChange}/>\n                    <Button style={{backgroundColor: \"#6a53e4\", height:\"56px\", marginTop:\"16px\", marginLeft:\"5px\"}} className={\"AddMeetingView-Header-addAttendee-Button\"} type=\"submit\" color=\"primary\"  variant=\"contained\" onClick={this.handleAddAttende}>\n                        Add\n                    </Button>\n\n                    <Button style={{backgroundColor: \"#6a53e4\", marginTop:\"20px\", marginBottom:\"10px\", marginLeft:\"10px\", marginRight:\"10px\", width:\"330px\"}} className={\"AddMeetingView-Header-Submit-Button\"} type=\"submit\" color=\"primary\" variant=\"contained\" onClick={this.submit}>\n                        Create meeting\n                    </Button>\n                </header>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/Calendar.bb613596.svg\";","export default __webpack_public_path__ + \"static/media/Settings.2cbb9c21.svg\";","import React from 'react';\nimport SidebarSplitViewController from './views/SidebarSplitViewController'\nimport LoginView from './views/LoginView'\nimport MeetingsOverviewView from './views/MeetingsOverviewView'\nimport CalendarView from './views/CalendarView'\nimport SettingsView from './views/SettingsView'\nimport AddMeetingView from './views/addMeetingView'\nimport calendar from './images/icons/Calendar.svg'\nimport settings from './images/icons/Settings.svg'\nimport { Fab } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport {\n    usePopupState,\n    bindTrigger,\n    bindPopover,\n} from 'material-ui-popup-state/hooks'\nimport Popover from '@material-ui/core/Popover'\nimport {Event as Meeting} from \"./models/Event\";\n\n\n// export const APP_COLOR = \"#6a53e4\";\n\nfunction App() {\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'demoPopover',\n    })\n    if (isSignedIn()) {\n        let meetings:Record<string, Meeting[]>\n        const mainView = <CalendarView/>\n        const detailView = <MeetingsOverviewView dateRange={{startDate: new Date(), endDate: new Date()}}/>\n        const mainPage = {mainView, detailView, icon:calendar}\n        const settingsView = <SettingsView />\n        const settingsPage = {mainView: settingsView, icon:settings}\n        const addMeetingView = <AddMeetingView popupState={popupState}/>\n        return (\n            <React.Fragment>\n                <SidebarSplitViewController pages={[mainPage, settingsPage]}/>\n                <Fab color=\"primary\" aria-label=\"add\">\n                    <Add {...bindTrigger(popupState)}/>\n                </Fab>\n                <Popover style={{height:\"1000px\"}}\n                         {...bindPopover(popupState)}\n                         anchorOrigin={{\n                             vertical: \"top\",\n                             horizontal: \"center\",\n                         }}\n                         transformOrigin={{\n                             vertical: \"bottom\",\n                             horizontal: \"center\",\n                         }}\n                >\n                    {addMeetingView}\n                </Popover>\n            </React.Fragment>\n\n        )\n    } else {\n        return <LoginView />;\n    }\n}\n\nfunction isSignedIn() {\n    return true; // TODO: Implement this to read from browser storage\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}